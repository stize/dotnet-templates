# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ feature/stize.webapi ]
  pull_request:
    branches: [ feature/stize.webapi ]
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          ref: feature/stize.webapi
          fetch-depth: 0
          
      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@255f46e14d51fbc603743e2aa2907954463fbeb9
        uses: NuGet/setup-nuget@v1.0.2
        with:
          # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
          nuget-version: latest # optional, default is latest
          # NuGet API Key to configure.
          #nuget-api-key: # optional
          # Source to scope the NuGet API Key to.
          #nuget-api-key-source: # optional
      - uses: actions/setup-dotnet@v1
        with:
            dotnet-version: '3.1.x' # SDK Version to use; x will use the latest version of the 3.1 channel
      - name: run minver
        id: version
        uses: thefringeninja/action-minver
      
      - run: nuget pack stize.webapi/Template.nuspec -version ${{ steps.version.outputs.version }}